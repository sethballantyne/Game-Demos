-- Produces Font objects based on the settings in fonts.xml; these are consumed by the ResourceManager.
class FontFactory
Private
Public
    -- Creates a Font object from each <font> element read in fonts.xml
    -- Exceptions:
    -- System::Xml::XmlException: the specified attribute isn't present within the element,
    --                            or the attributes value equates to String::Empty.
    -- System::FormatException: the value of the attribute is non-numeric.
    -- System::OverflowExcepion: the attribute contains a number that's too big to be stored as an int.
    -- ResourceNotFoundExeption: the resource manager doesn't have the specified bitmap font.
    function Font[] CreateFont(XmlDocument fontsXMLFile)
        
        XElement[] fontElements := fontsXMLFile->Root->GetDescendants("fonts")->ToArray()

        new List<Font> parsedFonts
        foreach(fontElement in fontElements)

            try
                string name := XmlHelper::GetAttributeValue(fontElement, "name")
                string bitmap := XmlHelper::GetAttributeValue(fontElement, "bitmap")
                int glyphWidth := XmlHelper::GetAttributeValueAsInt32(fontElement, "glyphWidth")
                int glyphHeight := XmlHelper::GetAttributeValueAsInt32(fontElement, "glyphHeight")

                Surface fontSurface := ResourceManager::GetSurface("bitmap")
                parsedFonts->Add(new Font(name, fontSurface, glyphWidth, glyphHeight))
            catch
                throw
            end try

        end foreach

        return parsedFonts->ToArray()
    end function
end class